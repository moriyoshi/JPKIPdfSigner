<?xml version="1.0" encoding="UTF-8" ?>
<project name="JPKIPdfSigner" default="build">
  <!--
    - properties
    -->
  <!-- core properties -->
  <tstamp>
    <format property="build.timestamp" pattern="yyyyMMdd-HHmmss" />
  </tstamp>
  <property name="project.name" value="${ant.project.name}" />
  <property name="project.displayname" value="JPKI PDF Signer" />
  <property name="project.version" value="1.0" />
  <property name="project.gui.mainclass" value="jp.opencollector.application.jpkipdf.JPKIPdfSignerSwingGUI" />
  <property name="copyright" value="2011 (C) Moriyoshi Koizumi" />

  <!-- top level components -->
  <property name="src.dir" location="${basedir}/src" />
  <property name="src.main.dir" location="${src.dir}/main" />
  <property name="src.main.java.dir" location="${src.main.dir}/java" />
  <property name="src.main.resources.dir" location="${src.main.dir}/resources" />
  <property name="src.main.conf.dir" location="${src.main.dir}/conf" />
  <property name="conf.dir" location="${src.main.conf.dir}" />
  <property name="bin.dir" location="${basedir}/bin" />
  <property name="lib.dir" location="${basedir}/lib" />
  <property name="build.dir" location="${basedir}/build" />
  <property name="component.properties" location="${basedir}/component.properties" />

  <!-- src -->
  <property name="src.encoding" value="Windows-31J" />

  <!-- conf -->
  <property name="conf.test.dir" location="${basedir}/conf/test" />

  <!-- dist -->
  <property name="dist.encoding" value="UTF-8" />
  <property name="dist.dir" location="${basedir}/dist" />
  <property name="dist.prefix" value="${project.name}-${project.version}" />
  <property name="dist.jar.name" value="jpkipdfsigner-${project.version}.jar" />
  <property name="dist.gui.jar.name" value="jpkipdfsignergui-${project.version}.jar" />
  <property name="dist.src.name" value="${dist.prefix}-src" />
  <property name="dist.src.dir" location = "${dist.dir}/src-${build.timestamp}" />
  <property name="dist.bin.dir" location="${dist.dir}/bin-${build.timestamp}" />
  <property name="dist.bin.mac.dir" location="${dist.bin.dir}/mac" />
  <property name="dist.bin.mac.bundle.dir" location="${dist.bin.mac.dir}/${project.displayname}.app" />
  <property name="dist.bin.mac.dmg" location="${dist.bin.dir}/${project.name}-${project.version}.dmg" />
  <!--
  <property name="dist.bin.mac.args" value="-XstartOnFirstThread" />
  -->
  <property name="dist.bin.mac.args" value="" />
  <property name="dist.bin.windows.zip" location="${dist.bin.dir}/${project.name}-bin-windows-${project.version}.zip" />
  <property name="dist.bin.windows.launch4j.config" location="${dist.bin.dir}/launch4j.xml" />
  <property name="dist.bin.windows.dir" location="${dist.bin.dir}/windows" />
  <property name="dist.bin.windows.exe" location="${dist.bin.windows.dir}/${project.name}.exe" />

  <!-- javadoc -->
  <property name="javadoc.encoding" value = "UTF-8" />
  <property name="javadoc.html-charset" value = "UTF-8" />
  <property name="javadoc.locale" value = "ja_JP" />

  <!-- lib -->
  <property file="${component.properties}" />

  <!-- System tools -->
  <available property="lib.jdk.tools"
             file="${java.home}/../Classes/classes.jar"
             value="${java.home}/../Classes/classes.jar" />
  <available property="lib.jdk.tools"
             file="${java.home}/lib/tools.jar"
             value="${java.home}/lib/tools.jar" />

  <!-- build -->
  <condition property="build.os.mac">
    <os family="mac" />
  </condition>

  <condition property="build.os.windows">
    <os family="windows" />
  </condition>

  <condition property="build.os.linux">
    <and>
      <os family="unix" />
      <equals arg1="${os.name}" arg2="linux" casesensitive="false" />
    </and>
  </condition>

  <condition property="build.os" value="windows">
    <isset property="build.os.windows" />
  </condition>

  <condition property="build.os" value="mac">
    <isset property="build.os.mac" />
  </condition>

  <condition property="build.os" value="linux">
    <isset property="build.os.linux" />
  </condition>

  <property name="build.arch" value="x86" />
  <property name="build.dir" location="${build.dir}/classes" />
  <property name="build.product.jar" location="${build.dir}/${dist.jar.name}" />
  <property name="build.product.gui.jar" location="${build.dir}/${dist.gui.jar.name}" />
  <property name="build.classes.dir" location="${build.dir}/classes" />
  <property name="build.src.main.java.dir" location="${build.dir}/src" />
  <property name="build.javadoc.dir" location="${build.dir}/javadoc" />

  <macrodef name="define.lib.swt">
    <attribute name="build.os" />
    <attribute name="build.arch" />
    <sequential>
      <property name="lib.swt" value="${lib.swt.@{build.os}.@{build.arch}}" />
    </sequential>
  </macrodef>

  <!-- <define.lib.swt build.os="${build.os}" build.arch="${build.arch}" /> -->

  <path id="build.classpath">
    <pathelement path="${lib.itextpdf}" />
    <pathelement path="${lib.bcmail}" />
    <pathelement path="${lib.bcprov}" />
    <pathelement path="${lib.bctsp}" />
  </path>

  <path id="build.gui.classpath">
    <path refid="build.classpath" />
    <!-- <pathelement path="${lib.swt}" /> -->
  </path>

  <!-- test -->
  <path id="test.classpath">
    <pathelement path="${lib.itextpdf}" />
    <pathelement path="${lib.bcmail}" />
    <pathelement path="${lib.bcprov}" />
    <pathelement path="${lib.bctsp}" />
  </path>

  <!--
  - FILTERS
  -->
  <filter token="APP_VERSION" value="${project.version}" />

  <!--
  - TARGETS
  -->

  <!-- clean -->
  <target name="clean" depends="build.clean, dist.clean" />

  <!-- build -->
  <target name="build.clean" depends="compile.clean">
    <delete dir="${build.dir}" />
    <delete dir="${build.dir}" />
  </target>

  <target name="build.prepare">
    <mkdir dir="${build.dir}" />
    <mkdir dir="${build.src.main.java.dir}" />
    <mkdir dir="${build.classes.dir}" />
  </target>

  <target name="build.gui" depends="compile.gui, native2ascii">
    <jar destfile="${build.product.gui.jar}">
      <fileset dir="${build.classes.dir}">
        <include name="**/*" />
      </fileset>
      <manifest>
        <attribute name="Main-Class" value="${project.gui.mainclass}" />
      </manifest>
    </jar>
  </target>

  <target name="build" depends="compile, native2ascii">
    <jar destfile="${build.product.jar}">
      <fileset dir="${build.classes.dir}">
        <include name="**/*" />
      </fileset>
      <manifest>
        <attribute name="Main-Class" value="jp.opencollector.application.jpkipdf.JPKIPdfSigner" />
      </manifest>
    </jar>
  </target>

  <!-- native2ascii -->

  <target name="native2ascii.prepare">
    <mkdir dir="${build.src.main.java.dir}" />
    <mkdir dir="${build.classes.dir}" />
    <copy todir="${build.src.main.java.dir}" filtering="true">
      <fileset dir="${src.main.java.dir}">
        <include name="**/*.properties" />
      </fileset>
    </copy>
  </target>

  <target name="native2ascii" depends="native2ascii.prepare">
    <native2ascii encoding="${src.encoding}"
                  src="${build.src.main.java.dir}"
                  dest="${build.classes.dir}">
      <include name="**/*.properties" />
    </native2ascii>
  </target>

  <!-- compile -->
  <target name="compile.clean">
    <delete dir="${build.src.main.java.dir}" />
    <delete dir="${build.classes.dir}" />
  </target>

  <target name="compile.prepare" depends="build.prepare">
    <mkdir dir="${build.src.main.java.dir}" />
    <mkdir dir="${build.classes.dir}" />
    <copy todir="${build.src.main.java.dir}" filtering="true">
      <fileset dir="${src.main.java.dir}">
        <include name="**/*.java" />
        <exclude name="**/JPKIPdfSignerSWTGUI.java" />
      </fileset>
    </copy>
  </target>

  <target name="compile" depends="compile.prepare">
    <javac destdir="${build.classes.dir}"
           encoding="${src.encoding}" debug="true" deprecation="true"
           srcdir="${build.src.main.java.dir}" target="1.5" source="1.5"
           includeantruntime="false">
      <classpath refid="build.classpath" />
      <include name="**/*.java" />
      <exclude name="**/JPKIPdfSigner*GUI.java" />
    </javac>
  </target>

  <target name="compile.gui" depends="compile.prepare">
    <javac destdir="${build.classes.dir}"
           encoding="${src.encoding}" debug="true" deprecation="true"
           srcdir="${build.src.main.java.dir}" target="1.5" source="1.5"
           includeantruntime="false">
      <classpath refid="build.gui.classpath" />
      <include name="**/*.java" />
    </javac>
  </target>

  <!-- doc -->
  <target name="doc" depends="javadoc" />

  <!-- javadoc -->
  <target name="javadoc.clean">
    <delete dir="${build.javadoc.dir}" />
  </target>

  <target name="javadoc.prepare">
    <mkdir dir="${build.dir}" />
    <mkdir dir="${build.src.main.java.dir}" />
    <mkdir dir="${build.javadoc.dir}" />

    <copy todir="${build.src.main.java.dir}">
      <fileset dir="${src.main.java.dir}">
        <include name="**/*.java" />
      </fileset>
    </copy>
  </target>

  <target name="javadoc" depends="javadoc.prepare">
    <javadoc destdir="${build.javadoc.dir}"
             classpathref="build.classpath"
             locale="${javadoc.locale}"
             docencoding="${javadoc.encoding}"
             charset="${javadoc.html-charset}"
             encoding="${src.encoding}"
             additionalparam="-J-Dorg.apache.commons.attributes.javadoc.CATaglet.sources=${build.src.main.java.dir}">
      <bottom>&lt;i&gt;${copyright}. All rights reserved.&lt;/i&gt;</bottom>
      <tag name="todo" scope="all" description="To do:" />
      <taglet name="org.apache.commons.attributes.javadoc.CATaglet"
              path="${lib.commons-attributes.compiler}" />
      <fileset dir="${build.src.main.java.dir}">
        <include name="**/*.java" />
      </fileset>
      <link href="http://java.sun.com/j2se/1.4.2/docs/api/" />
      <link href="http://java.sun.com/products/javamail/javadocs/" />
      <link href="http://struts.apache.org/api/" />
    </javadoc>
  </target>

  <!-- dist -->
  <target name="dist.prepare">
    <mkdir dir="${dist.dir}" />
  </target>

  <target name="dist.clean">
    <delete>
      <fileset dir="${basedir}">
        <include name="*.war" />
        <include name="*.jar" />
        <include name="*.bz2" />
        <include name="*.gz" />
        <include name="*.zip" />
      </fileset>
    </delete>
    <delete dir="${dist.dir}" />
  </target>

  <target name="dist" depends="dist.src" />

  <target name="dist.src.prepare" depends="dist.prepare">
    <mkdir dir="${dist.src.dir}" />
    <mkdir dir="${dist.src.dir}/${dist.src.name}" />
  </target>

  <target name="dist.src.clean">
    <delete dir="${dist.src.dir}" />
  </target>

  <target name="dist.src" depends="dist.src.prepare">
    <copy todir="${dist.src.dir}/${dist.src.name}">
      <fileset dir="${basedir}">
        <include name="bin/**/*" />
        <include name="conf/**/*" />
        <include name="src/**/*" />
        <include name="lib/**/*" />
        <include name="examples/**/*" />
        <include name="component.properties" />
        <include name="build.xml" />
        <exclude name="**/*~" />
        <exclude name="**/*.bak" />
        <exclude name="**/CVS" />
        <exclude name="**/.cvsignore" />
        <exclude name="**/.*" />
      </fileset>
    </copy>
    <zip destfile="${basedir}/${dist.src.name}.zip" encoding="${dist.encoding}">
      <fileset dir="${dist.src.dir}">
        <include name="**/*" />
      </fileset>
    </zip>
    <tar compression="gzip" destfile="${basedir}/${dist.src.name}.tar.gz">
      <tarfileset dir="${dist.src.dir}">
        <include name="**/*" />
      </tarfileset>
    </tar>
  </target>

  <target name="dist.bin">
    <antcall target="dist.bin.${build.os}" />
  </target>

  <target name="dist.bin.prepare" depends="dist.prepare">
    <mkdir dir="${dist.bin.dir}" />
  </target>

  <target name="dist.bin.mac.bundle.prepare" depends="dist.bin.mac.prepare" if="build.os.mac">
    <mkdir dir="${dist.bin.mac.bundle.dir}" />
    <mkdir dir="${dist.bin.mac.bundle.dir}/Contents" />
    <mkdir dir="${dist.bin.mac.bundle.dir}/Contents/Resources" />
    <mkdir dir="${dist.bin.mac.bundle.dir}/Contents/Libraries/Java" />
    <mkdir dir="${dist.bin.mac.bundle.dir}/Contents/MacOS" />
  </target>

  <target name="dist.bin.mac.prepare" depends="dist.bin.prepare">
    <mkdir dir="${dist.bin.mac.dir}" />
  </target>

  <target name="dist.bin.windows.prepare" depends="dist.bin.prepare">
    <mkdir dir="${dist.bin.windows.dir}" />
  </target>

  <target name="dist.bin.mac.clean">
    <delete dir="${dist.bin.mac.bundle.dir}" />
  </target>

  <target name="dist.bin.mac" depends="dist.bin.mac.bundle">
    <exec executable="hdiutil">
      <arg value="create" />
      <arg value="-srcfolder" />
      <arg value="${dist.bin.mac.bundle.dir}" />
      <arg value="${dist.bin.mac.dmg}" />
    </exec>
    <exec executable="hdiutil">
      <arg value="internet-enable" />
      <arg value="-yes" />
      <arg value="${dist.bin.mac.dmg}" />
    </exec>
  </target>

  <target name="dist.bin.mac.bundle" depends="build.gui,dist.bin.mac.bundle.prepare">
    <copy todir="${dist.bin.mac.bundle.dir}/Contents/Libraries/Java"
          flatten="true">
      <path refid="build.gui.classpath" />
      <file file="${build.product.gui.jar}" />
    </copy>
    <copy file="${src.main.resources.dir}/${project.name}.icns"
          todir="${dist.bin.mac.bundle.dir}/Contents/Resources"
          failonerror="false" />
    <echo file="${dist.bin.mac.bundle.dir}/Contents/Info.plist"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>CFBundleExecutable</key>
    <string>${project.displayname}</string>
    <key>CFBundleGetInfoString</key>
    <string>${project.displayname} ${project.version} for Mac OS X</string>
    <key>CFBundleIconFile</key>
    <string>${project.name}.icns</string>
    <key>CFBundleIdentifier</key>
    <string>${project.gui.mainclass}</string>
    <key>CFBundleInfoDictionaryVersion</key>
    <string>6.0</string>
    <key>CFBundleName</key>
    <string>${project.displayname}</string>
    <key>CFBundlePackageType</key>
    <string>APPL</string>
    <key>CFBundleShortVersionString</key>
    <string>${project.version}</string>
    <key>CFBundleSignature</key>
    <string>?????</string>
    <key>CFBundleVersion</key>
    <string>118</string>
    <key>NSPrincipalClass</key>
    <string>NSApplication</string>
    <key>NSSupportsSuddenTermination</key>
    <string>NO</string>
  </dict>
</plist>
]]></echo>
    <echo file="${dist.bin.mac.bundle.dir}/Contents/MacOS/${project.displayname}"><![CDATA[#!/bin/sh
basedir=`dirname "$0"`
libdir="$basedir/../Libraries/Java"
classpath="$basedir"
pushd "$libdir"
for file in *; do
  classpath="$classpath:$libdir/$file"
done
popd
exec java -d32 ${dist.bin.mac.args} \
          -classpath "$classpath" \
          ${project.gui.mainclass}
]]></echo>
    <chmod file="${dist.bin.mac.bundle.dir}/Contents/MacOS/${project.displayname}"
           perm="ugo+rx" />
  </target>

  <target name="dist.bin.windows" depends="build.gui,dist.bin.windows.prepare">
    <taskdef name="launch4j"
             classname="net.sf.launch4j.ant.Launch4jTask"
             classpath="${launch4j.dir}/launch4j.jar:${launch4j.dir}/lib/xstream.jar" />
    <copy todir="${dist.bin.windows.dir}"
          flatten="true">
      <path refid="build.gui.classpath" />
      <file file="${build.product.gui.jar}" />
    </copy>
    <basename property="lib.itextpdf.name" file="${lib.itextpdf}" />
    <basename property="lib.bcmail.name"   file="${lib.bcmail}" />
    <basename property="lib.bcprov.name"   file="${lib.bcprov}" />
    <basename property="lib.bctsp.name"    file="${lib.bctsp}" />

    <echo file="${dist.bin.windows.launch4j.config}"><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<launch4jConfig>
  <headerType>gui</headerType>
  <outfile>${dist.bin.windows.exe}</outfile>
  <dontWrapJar>true</dontWrapJar>
  <versionInfo>
    <fileVersion>${project.version}.0.0</fileVersion>
    <txtFileVersion>${project.displayname} ${project.version}</txtFileVersion>
    <fileDescription>${project.displayname}</fileDescription>
    <copyright>${copyright}</copyright>
    <productName>${project.displayname}</productName>
    <productVersion>${project.version}.0.0</productVersion>
    <txtProductVersion>${project.displayname} ${project.version}</txtProductVersion>
    <internalName>${project.name}</internalName>
    <originalFilename>${project.name}-${project.version}.exe</originalFilename>
  </versionInfo>
  <classPath>
    <mainClass>${project.gui.mainclass}</mainClass>
    <cp>${dist.gui.jar.name}</cp>
    <cp>${lib.itextpdf.name}</cp>
    <cp>${lib.bcmail.name}</cp>
    <cp>${lib.bcprov.name}</cp>
    <cp>${lib.bctsp.name}</cp>
  </classPath>
  <jre>
    <minVersion>1.5.0</minVersion>
    <jdkPreference>preferJre</jdkPreference>
  </jre>
</launch4jConfig>]]></echo>
    <launch4j configFile="${dist.bin.windows.launch4j.config}" />
    <zip destfile="${dist.bin.windows.zip}">
      <zipfileset dir="${dist.bin.windows.dir}" prefix="${project.name}-${project.version}" />
    </zip>
  </target>
</project>
<!--
vim600: sts=2 sw=2 ts=2 et
-->
